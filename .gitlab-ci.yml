---

.script-git-submodule: &script-git-submodule
  - |
    git submodule sync --recursive
    git submodule update --init --recursive

.script-bootstrap-python: &script-bootstrap-python
  - |
    if ! [[ -x "$(command -v pipx)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_22.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y bzip2 ca-certificates curl flake8 gcc gnupg gzip iproute2 pipx procps python3 python3-apt python3-cryptography python3-flake8 python3-jmespath python3-lxml python3-netaddr python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel sudo tar unzip xz-utils yamllint zip
    fi
    sh -x -c "python3 --version"
    sh -x -c "pipx --version"
    sh -x -c "flake8 --version"
    sh -x -c "yamllint --version"

.script-bootstrap-ansible: &script-bootstrap-ansible
  - |
    if ! [[ -x "$(command -v ansible)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_22.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y ansible ansible-lint python3-docker python3-netaddr python3-vagrant
    fi
    sh -x -c "ansible --version"
    sh -x -c "ansible-lint --version"

.script-bootstrap-molecule: &script-bootstrap-molecule
  - |
    if ! [[ -x "$(command -v molecule)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_22.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y python3-molecule python3-molecule-docker python3-molecule-vagrant
    fi
    sh -x -c "molecule --version"

.script-bootstrap-libvirt: &script-bootstrap-libvirt
  - |
    if ! [[ -x "$(command -v qemu-system-x86_64)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      sudo -E apt-get update
      sudo -E apt-get install -y binutils bridge-utils dnsmasq-base ebtables gcc libarchive-tools libguestfs-tools libvirt-clients libvirt-daemon-system libvirt-dev make qemu-system qemu-utils ruby-dev virt-manager
    fi
    sudo systemctl start libvirtd.service
    sh -x -c "sudo systemctl status --no-pager libvirtd.service"
    sh -x -c "qemu-system-x86_64 --version"
    sh -x -c "virsh --version"

.script-bootstrap-vagrant: &script-bootstrap-vagrant
  - |
    if ! [[ -x "$(command -v vagrant)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb [arch=amd64] https://apt.releases.hashicorp.com jammy main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/hashicorp.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y vagrant
      vagrant plugin install vagrant-libvirt
    fi
    sh -x -c "vagrant --version"
    sh -x -c "vagrant plugin list"

.script-symlink-ansible-role: &script-symlink-ansible-role
  - |
    export _ROLE="$(echo $CI_PROJECT_NAME | sed 's/^ansible-role-//g')"
    mkdir -p $HOME/.ansible/roles
    ln -s $CI_PROJECT_DIR $HOME/.ansible/roles/alvistack.$_ROLE

.script-molecule-test: &script-molecule-test
  - |
    export _MOLECULE_INSTANCE_NAME="$(pwgen -1AB 12)"
    sudo -E molecule test -s $_BOX-$_PROVIDER

.script-ansible-galaxy-role-import: &script-ansible-galaxy-role-import
  - |
    if [[ -n "$CI_COMMIT_TAG" ]] && [[ "$CI_COMMIT_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
      export _USER="$CI_PROJECT_NAMESPACE"
      export _REPO="$CI_PROJECT_NAME"
    elif [[ -n "$CI_COMMIT_BRANCH" ]] && [[ "$CI_COMMIT_BRANCH" =~ master ]]; then
      export _USER="$CI_PROJECT_NAMESPACE"
      export _REPO="$CI_PROJECT_NAME"
    else
      exit 0
    fi
    ansible-galaxy role import --token $ANSIBLE_GALAXY_TOKEN $_USER $_REPO

.job-molecule-test: &job-molecule-test
  script:
    - *script-bootstrap-python
    - *script-bootstrap-ansible
    - *script-bootstrap-molecule
    - *script-bootstrap-libvirt
    - *script-bootstrap-vagrant
    - *script-symlink-ansible-role
    - *script-molecule-test

.job-ansible-galaxy-role-import: &job-ansible-galaxy-role-import
  script:
    - *script-bootstrap-python
    - *script-bootstrap-ansible
    - *script-ansible-galaxy-role-import

default:
  before_script:
    - *script-git-submodule
  retry: 2

build:ubuntu-22.04-libvirt:
  <<: *job-molecule-test
  stage: build
  variables:
    _BOX: "ubuntu-22.04"
    _PROVIDER: "libvirt"

build:ubuntu-21.10-libvirt:
  <<: *job-molecule-test
  stage: build
  variables:
    _BOX: "ubuntu-21.10"
    _PROVIDER: "libvirt"

build:ubuntu-20.04-libvirt:
  <<: *job-molecule-test
  stage: build
  variables:
    _BOX: "ubuntu-20.04"
    _PROVIDER: "libvirt"

build:ubuntu-18.04-libvirt:
  <<: *job-molecule-test
  stage: build
  variables:
    _BOX: "ubuntu-18.04"
    _PROVIDER: "libvirt"

test:centos-9-stream-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "centos-9-stream"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:centos-8-stream-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "centos-8-stream"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:centos-7-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "centos-7"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:opensuse-tumbleweed-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "opensuse-tumbleweed"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:opensuse-leap-15.4-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "opensuse-leap-15.4"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:opensuse-leap-15.3-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "opensuse-leap-15.3"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:debian-testing-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "debian-testing"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:debian-11-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "debian-11"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:debian-10-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "debian-10"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:fedora-rawhide-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "fedora-rawhide"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:fedora-36-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "fedora-36"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:fedora-35-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "fedora-35"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:rhel-9-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "rhel-9"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:rhel-8-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "rhel-8"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

test:rhel-7-libvirt:
  <<: *job-molecule-test
  stage: test
  variables:
    _BOX: "rhel-7"
    _PROVIDER: "libvirt"
  allow_failure: true
  retry: 0

deploy:ansible-galaxy:
  <<: *job-ansible-galaxy-role-import
  stage: deploy
  needs:
    - build:ubuntu-22.04-libvirt
    - build:ubuntu-21.10-libvirt
    - build:ubuntu-20.04-libvirt
    - build:ubuntu-18.04-libvirt
