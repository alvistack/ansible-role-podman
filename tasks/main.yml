---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  include_vars: "../vars/main.yml"

- name: include release specific variables
  include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true

- name: include release specific tasks
  include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/bash_completion.d" }
    - { dest: "/etc/cni/net.d" }
    - { dest: "/lib/systemd/system" }
    - { dest: "/lib/tmpfiles.d" }
    - { dest: "/usr/local/bin" }
    - { dest: "/usr/share/containers" }

- name: download archive
  shell: |
    set -euo pipefail
    TMP_DIR="$(mktemp -d)" \
      && cd $TMP_DIR \
      && mkdir -p .{{ item.dest | dirname }} \
      && curl -skL -m 300 {{ item.url }} > .{{ item.dest }} \
      && echo -n "{{ item.checksum }} .{{ item.dest }}" | sha256sum -c - \
      && mkdir -p {{ item.dest | dirname }} \
      && mv .{{ item.dest }} {{ item.dest }} \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
    creates: "{{ item.dest | dirname }}"
  loop:
    - "{{ podman_download }}"
  register: result
  until: result is succeeded

- name: unarchive package
  shell: |
    set -euo pipefail
    mkdir -p /var/log/ansible
    exec &> >(tee -a /var/log/ansible/{{ podman_download.checksum }}.log)
    cd /usr/local/bin
    TMP_DIR="$(mktemp -d)" \
      && cp {{ podman_download.dest }} $TMP_DIR/podman \
      && chown root:root $TMP_DIR/podman \
      && chmod 0755 $TMP_DIR/podman \
      && mv $TMP_DIR/podman . \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
    creates: "/var/log/ansible/{{ podman_download.checksum }}.log"
  notify:
    - podman | systemctl daemon-reload
    - podman | systemctl restart podman.socket

- name: copy templates
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: "/etc/bash_completion.d/podman" }
    - { dest: "/etc/cni/net.d/87-podman-bridge.conflist" }
    - { dest: "/lib/tmpfiles.d/podman.conf" }
    - { dest: "/lib/systemd/system/podman.service" }
    - { dest: "/lib/systemd/system/podman.socket" }
  notify:
    - podman | systemctl daemon-reload
    - podman | systemctl restart podman.socket

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/bash_completion.d/podman" }
    - { dest: "/etc/cni/net.d/87-podman-bridge.conflist" }
    - { dest: "/lib/systemd/system/podman.service" }
    - { dest: "/lib/systemd/system/podman.socket" }
    - { dest: "/lib/tmpfiles.d/podman.conf" }
    - { dest: "/usr/local/bin/podman", mode: "0755" }
  notify:
    - podman | systemctl daemon-reload
    - podman | systemctl restart podman.socket

- name: flush handlers
  meta: flush_handlers

- name: systemctl start podman.socket
  service:
    name: "podman.socket"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false
